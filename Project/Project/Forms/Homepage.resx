<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TwAAAABJRU5ErkJggg==
</value>
  </data>
</root>